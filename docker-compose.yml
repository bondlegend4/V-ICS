networks:
  control_net: # Network for SCADA, Bridge, Attacker (Purdue L2/3)
    driver: bridge
    ipam:
      config:
        - subnet: 192.168.10.0/24
          gateway: 192.168.10.1
    driver_opts:
      com.docker.network.bridge.name: br_vics_control
  ot_protected_net: # PLC Management
    driver: bridge
    ipam:
      config:
        - subnet: 192.168.20.0/24
          gateway: 192.168.20.1
    driver_opts:
      com.docker.network.bridge.name: br_vics_protected
  field_net:   # Network for PLC control interface, Simulation (Purdue L0/1)
    driver: bridge
    ipam:
      config:
        - subnet: 192.168.30.0/24
          gateway: 192.168.30.1
    driver_opts:
      com.docker.network.bridge.name: br_vics_field

services:
  # --- Core Infrastructure ---
  database:
    image: mysql/mysql-server:8.0.32
    container_name: mysql
    ports:
        - "3306:3306"
    environment: 
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_USER=root
      - MYSQL_PASSWORD=root
      - MYSQL_DATABASE=scadalts
    expose: ["3306"]
    volumes:
      - ./scadalts/db_data:/var/lib/mysql:rw
      - ./scadalts/db_conf:/etc/mysql:ro
    command: --log_bin_trust_function_creators=1
    networks:
      - control_net
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost", "-u", "root", "-p$$MYSQL_ROOT_PASSWORD"]
      interval: 10s
      timeout: 5s
      retries: 5

  memcached:
    image: memcached:latest
    container_name: vics-memcached-connector
    command: -m 64 # Optional: limit memory usage
    networks:
      # Needs to be accessible by both simulation and bridge
      - field_net
    ports:
      - "11211:11211" # Expose only if needed for direct host access

  mqtt:
      image: hivemq/hivemq4:latest
      ports:
          - "8081:8080"
          - "1883:1883"
      expose: [ "8081", "1883" ]

  # --- ICS Components ---
  scadalts:
    image: scadalts/scadalts:latest # Make sure this image is available
    container_name: vics-scadalts-app
    environment:
        - CATALINA_OPTS=-Xmx2G -Xms2G
    ports: 
        - "8080:8080" # Scada-LTS Web UI
    depends_on: 
        - database
    expose: ["8080", "8000", "502"]
    volumes:
        - ./scadalts/tomcat_log:/usr/local/tomcat/logs:rw
    links:
        - database:database
    command:
        - /usr/bin/wait-for-it
        - --host=database
        - --port=3306
        - --timeout=30
        - --strict
        - --
        - /usr/local/tomcat/bin/catalina.sh
        - run
    networks:
      - control_net
  openplc:
    image: openplc:v3 # This image must be created locally
    depends_on:
        - scadalts
    ports:
        - "502:502"
        - "8082:8080"
    volumes:
    # Mount your specific PLC program file(s)
    # Note: Verify the correct internal path inside the OpenPLCv3 image
    - ./openplc/plcFiles:/root/OpenPLC_v3/plcFiles:ro
    command: -privileged
    networks:
      - ot_protected_net # Accessible by Bridge/SCADA
      - field_net   # Logically operates at field level

  # --- Simulation (using ICSSIM HIL concept) ---
  simulation:
    build:
      context: ./simulations
      dockerfile: Dockerfile
    container_name: vics-irrigation-simulation
    privileged: true # Consistent with ICSSIM examples
    environment:
      # Configure the connector for the simulation to use
      - CONNECTOR_TYPE=memcache
      - CONNECTOR_PATH=memcached:11211 # Service name:port
      - CONNECTOR_NAME=sim_state        # Namespace/Key prefix for memcached
      # Add any other environment variables your simulation needs
    volumes:
      # Mount simulation code and ICSSIM base classes if needed at runtime
      - ./simulations:/app:rw # Assuming your Dockerfile sets WORKDIR /app
      - ./icssim_framework/src:/app/icssim_framework/src:ro
      - ./logs/simulation:/app/logs:rw # Optional: Mount logs directory
    networks:
      # Primarily on field_net to reach memcached
      - field_net
    depends_on:
      - memcached # Must wait for memcached to be up
  # --- Bridge/API Service ---
  bridge:
    build:
      context: ./bridge
      dockerfile: Dockerfile
    container_name: vics-system-bridge
    environment:
      # Configure connector (must match simulation service)
      - CONNECTOR_TYPE=memcache
      - CONNECTOR_PATH=memcached:11211 # USE SERVICE NAME 'memcached'
      - CONNECTOR_NAME=sim_state
      # Configure Modbus connection to OpenPLC
      - MODBUS_HOST=192.168.10.6           # USE SERVICE NAME 'openplc'
      - MODBUS_PORT=502
      # Flask specific (optional)
      - FLASK_APP=bridge.py
      - FLASK_ENV=development       # Or production
      - POLL_INTERVAL=2.0           # Example: Override config defaults if needed
      - SYNC_INTERVAL=1.0
    ports:
      - "5001:5001" # Expose the Flask API/UI port
    volumes:
      # Mount bridge code and ICSSIM base classes if needed at runtime
      - ./bridge:/app:rw # Assuming WORKDIR /app
      - ./icssim_framework/src:/app/icssim_framework/src:ro
      - ./logs/bridge:/app/logs:rw # Optional: Mount logs directory
    networks:
      # Needs to talk to OpenPLC, Memcached, SCADA (potentially), and be reachable from host/Godot
      - field_net
    depends_on:
      - memcached   # Wait for connector backend

  # --- Attacker Component (Example) ---
  attacker:
    build:
      context: ./icssim_framework/deployments/attacker-docker
      dockerfile: Dockerfile
    container_name: vics-attacker-node
    privileged: true
    tty: true # Allow interactive terminal
    stdin_open: true # Keep stdin open
    volumes:
      - ./icssim_framework/src:/src:rw
      - ./logs/attacker:/src/logs:rw
    networks:
      # Should operate on the control network to target components
      - control_net
    depends_on:
      - openplc
      - bridge
      - scadalts # Wait for potential targets
    # Specify the default attacker script to run (adjust as needed)
    entrypoint: ["./start.sh", "Attacker.py"] # Example entrypoint

# Define persistent volumes if not using bind mounts (optional)
# volumes:
#   db_data:
#   tomcat_logs: