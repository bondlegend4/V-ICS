version: "3.9"

############################
#  NETWORKS
############################
networks:
  ics:   { driver: bridge }          # original project network
  wnet:  # ICSSIM wired network
    driver: bridge
    ipam: { config: [ { subnet: 192.168.0.0/24, gateway: 192.168.0.1 } ] }
    driver_opts: { com.docker.network.bridge.name: br_icsnet }
  fnet:  # ICSSIM field network
    driver: bridge
    ipam: { config: [ { subnet: 192.168.1.0/24, gateway: 192.168.1.1 } ] }
    driver_opts: { com.docker.network.bridge.name: br_phynet }

############################
#  ICSsVirtualForCiberSec SERVICES
############################
services:
  database:
    container_name: mysql
    image: mysql/mysql-server:8.0.32
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_USER=root
      - MYSQL_PASSWORD=root
      - MYSQL_DATABASE=scadalts
    ports: ["3306:3306"]
    volumes:
      - ./scadalts/db_data:/var/lib/mysql:rw
      - ./scadalts/db_conf:/etc/mysql:ro
    command: --log_bin_trust_function_creators=1
    networks: [ ics ]

  scadalts:
    image: scadalts/scadalts:latest
    environment: [ CATALINA_OPTS=-Xmx2G -Xms2G ]
    ports: ["8080:8080"]
    depends_on: [ database ]
    volumes: [ ./scadalts/tomcat_log:/usr/local/tomcat/logs:rw ]
    command: [ "/usr/bin/wait-for-it", "--host=database", "--port=3306",
               "--timeout=30", "--strict", "--",
               "/usr/local/tomcat/bin/catalina.sh", "run" ]
    networks: [ ics ]

  mqtt:
    image: hivemq/hivemq4:latest
    ports: ["1883:1883", "8081:8080"]
    networks: [ ics ]

  openplc:
    image: openplc:v3
    depends_on: [ scadalts ]
    ports: ["502:502", "8082:8080"]
    command: -privileged
    networks: [ ics ]

  python_bridge:
    build: { context: ./godot-bridge-openplc, dockerfile: Dockerfile }
    container_name: python_bridge
    ports: ["5001:5001"]
    volumes: [ ./simulations:/app/simulations ]
    environment: [ MODBUS_HOST=openplc, MODBUS_PORT=502 ]
    depends_on: [ openplc ]
    networks: [ ics ]

  simulation:
    build: { context: ./simulations, dockerfile: Dockerfile }
    container_name: irrigation_simulation
    environment: [ MODBUS_HOST=openplc, MODBUS_PORT=502 ]
    depends_on: [ openplc ]
    networks: [ ics ]

  godot_game:
    build:
      context: ./godot_game
      dockerfile: Dockerfile        # see earlier answer
    container_name: godot_game
    networks: [ ics ]

############################
# ICSSIM WRAPPER SERVICES
############################

  mars_physics:
    build:
      context: ./ics-wrapper
      dockerfile: Dockerfile          # python:3.10â€‘slim, pip install ics_sim; copies mars_physics.py
    entrypoint: ["python", "mars_physics.py"]
    container_name: mars_physics
    depends_on: [ plc_openplc ]
    networks:
      ics: {}
      fnet: { ipv4_address: 192.168.1.32 }

  plc_openplc:
    build:
      context: ./ics-wrapper
      dockerfile: Dockerfile
    entrypoint: ["python", "plc_openplc.py"]
    container_name: plc_openplc
    depends_on: [ openplc ]
    networks:
      ics: {}
      wnet: { ipv4_address: 192.168.0.30 }

  # Attackers
  attacker:
    build: attacker-docker/.
    stdin_open: true
    tty: true
    privileged: true
    working_dir: /src
    entrypoint: ["./start.sh", "Attacker.py"]
    container_name: attacker
    volumes: [ ../src:/src, /etc/timezone:/etc/timezone:ro, /etc/localtime:/etc/localtime:ro ]
    networks:
      wnet: { ipv4_address: 192.168.0.42 }

  attacker2:
    build: attacker-docker/.
    stdin_open: true
    tty: true
    privileged: true
    working_dir: /src
    entrypoint: ["./start.sh", "AttackerMachine.py"]
    container_name: attackermachine
    volumes: [ ../src:/src, /etc/timezone:/etc/timezone:ro, /etc/localtime:/etc/localtime:ro ]
    networks:
      wnet: { ipv4_address: 192.168.0.41 }

  attackerremote:
    build: attacker-docker/.
    stdin_open: true
    tty: true
    privileged: true
    working_dir: /src
    entrypoint: ["./start.sh", "AttackerRemote.py"]
    container_name: attackerremote
    volumes: [ ../src:/src, /etc/timezone:/etc/timezone:ro, /etc/localtime:/etc/localtime:ro ]
    networks:
      wnet: { ipv4_address: 192.168.0.43 }
